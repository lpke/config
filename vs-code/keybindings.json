[
  // removing default keybinds
  //prettier-ignore
  { "key": "ctrl+l", "command": "-expandLineSelection" },
  { "key": "ctrl+h", "command": "-editor.action.startFindReplaceAction" },
  { "key": "alt+h", "command": "-gitlens.showQuickFileHistory" },
  { "key": "shift+alt+h", "command": "-editor.showCallHierarchy" },
  { "key": "shift+alt+h", "command": "-editor.showIncomingCalls" },
  { "key": "shift+alt+h", "command": "-editor.showOutgoingCalls" },
  { "key": "shift+alt+h", "command": "-references-view.showCallHierarchy" },
  { "key": "shift+alt+h", "command": "-gitlens.showQuickRepoHistory" },
  { "key": "shift+cmd+h", "command": "-workbench.action.replaceInFiles" },
  { "key": "shift+cmd+j", "command": "-workbench.action.search.toggleQueryDetails" },
  { "key": "shift+cmd+k", "command": "-editor.action.deleteLines" },
  { "key": "shift+cmd+l", "command": "-editor.action.selectHighlights" },
  { "key": "shift+cmd+l", "command": "-addCursorsAtSearchResults" },
  { "key": "shift+cmd+l", "command": "-selectAllSearchEditorMatches" },
  { "key": "ctrl+9", "command": "-workbench.action.openEditorAtIndex9" },
  { "key": "cmd+9", "command": "-workbench.action.lastEditorInGroup" },
  { "key": "ctrl+0", "command": "-workbench.action.lastEditorInGroup" },
  { "key": "cmd+0", "command": "-workbench.action.focusSideBar" },
  { "key": "ctrl+`", "command": "-workbench.action.terminal.toggleTerminal" },
  { "key": "cmd+-", "command": "-workbench.action.zoomOut" },
  { "key": "cmd+=", "command": "-workbench.action.zoomIn" },
  { "key": "shift+cmd+u", "command": "-workbench.action.output.toggleOutput" },
  { "key": "cmd+8", "command": "-workbench.action.focusEighthEditorGroup" },
  { "key": "cmd+7", "command": "-workbench.action.focusSeventhEditorGroup" },
  { "key": "shift+cmd+e", "command": "-workbench.view.explorer" },
  { "key": "ctrl+shift+g", "command": "-workbench.view.scm" },
  { "key": "ctrl+alt+n", "command": "-code-runner.run" },
  { "key": "ctrl+t", "command": "-workbench.action.showAllSymbols" },
  { "key": "ctrl+t", "command": "-extension.vim_ctrl+t" },
  { "key": "space", "command": "-filesExplorer.openFilePreserveFocus"},
  { "key": "ctrl+space", "command": "-editor.action.triggerSuggest" },
  { "key": "ctrl+shift+down", "command": "-workbench.action.terminal.selectToNextCommand" },
  { "key": "ctrl+shift+down", "command": "-cursorDownSelect" },

  // move focus between main IDE areas
  // to/from any context - cmd/ctrl+shift+arrows
  {
    "key": "ctrl+shift+up",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isWindows || isLinux"
  },
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.focusPanel",
    "when": "isWindows || isLinux"
  },
  {
    "key": "ctrl+shift+left",
    "command": "workbench.action.focusAuxiliaryBar",
    "when": "isWindows || isLinux"
  },
  {
    "key": "ctrl+shift+right",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusSideBar"
      ]
    },
    "when": "(isWindows || isLinux) && !sideBarVisible"
  },
  {
    "key": "ctrl+shift+right",
    "command": "workbench.action.focusSideBar",
    "when": "(isWindows || isLinux) && sideBarVisible"
  },
  {
    "key": "cmd+shift+up",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isMac"
  },
  {
    "key": "cmd+shift+down",
    "command": "workbench.action.focusPanel",
    "when": "isMac"
  },
  {
    "key": "cmd+shift+left",
    "command": "workbench.action.focusAuxiliaryBar",
    "when": "isMac"
  },
  {
    "key": "cmd+shift+right",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusSideBar"
      ]
    },
    "when": "isMac && !sideBarVisible"
  },
  {
    "key": "cmd+shift+right",
    "command": "workbench.action.focusSideBar",
    "when": "isMac && sideBarVisible"
  },

  // context-dependent, locational main movement - ctrl/cmd+arrows
  // from editor
  {
    "key": "ctrl+right",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusSideBar"
      ]
    },
    "when": "(isWindows || isLinux) && (vim.mode == 'Normal') && editorFocus &&  && !sideBarVisible"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.action.focusSideBar",
    "when": "(isWindows || isLinux) && (vim.mode == 'Normal') && editorFocus && sideBarVisible"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.focusAuxiliaryBar",
    "when": "(isWindows || isLinux) && editorFocus"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.focusPanel",
    "when": "(isWindows || isLinux) && editorFocus"
  },
  {
    "key": "cmd+right",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusSideBar"
      ]
    },
    "when": "isMac && editorFocus && !sideBarVisible"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.focusSideBar",
    "when": "isMac && editorFocus && sideBarVisible"
  },
  {
    "key": "cmd+left",
    "command": "workbench.action.focusAuxiliaryBar",
    "when": "isMac && editorFocus"
  },
  {
    "key": "cmd+down",
    "command": "workbench.action.focusPanel",
    "when": "isMac && editorFocus"
  },
  // to editor
  {
    "key": "ctrl+up",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "(isWindows || isLinux) && panelFocus"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "(isWindows || isLinux) && sideBarFocus"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "(isWindows || isLinux) && auxiliaryBarFocus"
  },
  {
    "key": "cmd+up",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isMac && panelFocus"
  },
  {
    "key": "cmd+left",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isMac && sideBarFocus"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isMac && auxiliaryBarFocus"
  },

  // restore insert mode ctrl+right/left for word jumping
  {
    "key": "ctrl+right",
    "command": "cursorWordStartRight",
    "when": "(isWindows || isLinux) && (vim.mode == 'Insert') && editorFocus"
  },
  {
    "key": "ctrl+left",
    "command": "cursorWordEndLeft",
    "when": "(isWindows || isLinux) && (vim.mode == 'Insert') && editorFocus"
  },


  // close main IDE areas is focus command repeated
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.closePanel",
    "when": "(isWindows || isLinux) && panelFocus"
  },
  {
    "key": "ctrl+shift+left",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "(isWindows || isLinux) && auxiliaryBarFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "workbench.action.closeSidebar",
    "when": "(isWindows || isLinux) && sideBarFocus"
  },
  {
    "key": "cmd+shift+down",
    "command": "workbench.action.closePanel",
    "when": "isMac && panelFocus"
  },
  {
    "key": "cmd+shift+left",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "isMac && auxiliaryBarFocus"
  },
  {
    "key": "cmd+shift+right",
    "command": "workbench.action.closeSidebar",
    "when": "isMac && sideBarFocus"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.closePanel",
    "when": "(isWindows || isLinux) && panelFocus"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "(isWindows || isLinux) && auxiliaryBarFocus"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.action.closeSidebar",
    "when": "(isWindows || isLinux) && sideBarFocus"
  },
  {
    "key": "cmd+down",
    "command": "workbench.action.closePanel",
    "when": "isMac && panelFocus"
  },
  {
    "key": "cmd+left",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "isMac && auxiliaryBarFocus"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.closeSidebar",
    "when": "isMac && sideBarFocus"
  },

  // move focus within main IDE areas
  // cmd/ctrl+arrows (up/down or left/right)
  // primary sidebar
  {
    "key": "ctrl+down",
    "command": "workbench.action.nextSideBarView",
    "when": "(isWindows || isLinux) && sideBarFocus"
  },
  {
    "key": "ctrl+up",
    "command": "workbench.action.previousSideBarView",
    "when": "(isWindows || isLinux) && sideBarFocus"
  },
  {
    "key": "cmd+down",
    "command": "workbench.action.nextSideBarView",
    "when": "isMac && sideBarFocus"
  },
  {
    "key": "cmd+up",
    "command": "workbench.action.previousSideBarView",
    "when": "isMac && sideBarFocus"
  },
  // bottom panel
  {
    "key": "ctrl+right",
    "command": "workbench.action.nextPanelView",
    "when": "(isWindows || isLinux) && panelFocus"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.previousPanelView",
    "when": "(isWindows || isLinux) && panelFocus"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.nextPanelView",
    "when": "isMac && panelFocus"
  },
  {
    "key": "cmd+left",
    "command": "workbench.action.previousPanelView",
    "when": "isMac && panelFocus"
  },

  // bottom panel-related contextual overrides
  {
    "key": "cmd+up",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isMac && panelFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.focusPanel",
    "when": "(isWindows || isLinux) && panelVisible"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "(isWindows || isLinux) && panelFocus"
  },
  {
    "key": "cmd+shift+j",
    "command": "workbench.action.focusPanel",
    "when": "isMac && panelVisible"
  },
  {
    "key": "cmd+shift+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isMac && panelFocus"
  },


  // suggestions
  // regular
  {
    "key": "ctrl+t",
    "command": "editor.action.triggerSuggest",
    "when": "(isWindows || isLinux) && editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+t",
    "command": "editor.action.triggerSuggest",
    "when": "isMac && editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  // github copilot
  {
    "key": "ctrl+space",
    "command": "editor.action.inlineSuggest.trigger",
    "when": "(isWindows || isLinux) && editorTextFocus"
  },
  {
    "key": "alt+l",
    "command": "editor.action.inlineSuggest.showNext",
    "when": "(isWindows || isLinux) && editorTextFocus"
  },
  {
    "key": "alt+h",
    "command": "editor.action.inlineSuggest.showPrevious",
    "when": "(isWindows || isLinux) && editorTextFocus"
  },

  // terminal/code runner
  {
    "key": "meta+shift+n",
    "command": "code-runner.run",
    "when": "isWindows || isLinux"
  },
  {
    "key": "ctrl+alt+n",
    "command": "code-runner.run",
    "when": "isMac"
  },
  // clear output only when visible
  {
    "key": "meta+shift+o",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.output.action.clearOutput",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "when": "(isWindows || isLinux) && view.workbench.panel.output.visible"
  },
  {
    "key": "ctrl+alt+o",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.output.action.clearOutput",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "when": "isMac && view.workbench.panel.output.visible"
  },
  // clear terminal only when visible
  {
    "key": "meta+shift+o",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.terminal.clear",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "when": "(isWindows || isLinux) && view.terminal.visible"
  },
  {
    "key": "ctrl+alt+o",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.terminal.clear",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "when": "isMac && view.terminal.visible"
  },

  // git
  {
    "key": "shift+cmd+g",
    "command": "git.sync",
    "when": "isMac"
  },
  {
    "key": "shift+ctrl+g",
    "command": "git.sync",
    "when": "isWindows || isLinux"
  },

  // MacOS to Linux experience parity
  {
    "key": "ctrl+k ctrl+a",
    "command": "editor.action.selectAll",
    "when": "isWindows || isLinux"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.files.newUntitledFile",
    "when": "isWindows || isLinux",
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.files.openFile",
    "when": "isWindows || isLinux"
  },
  {
    "key": "ctrl+f",
    "command": "actions.find",
    "when": "isWindows || isLinux"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "isWindows || isLinux"
  },

  // tab and editor group navigation vim-style
  // navigate editor groups
  {
    "key": "cmd+l",
    "command": "workbench.action.focusNextGroup",
    "when": "isMac && vim.active && !sideBarFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusNextGroup",
    "when": "(isWindows || isLinux) && vim.active && !sideBarFocus"
  },
  {
    "key": "cmd+h",
    "command": "workbench.action.focusPreviousGroup",
    "when": "isMac && activeEditorGroupIndex != 1"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusPreviousGroup",
    "when": "(isWindows || isLinux) && activeEditorGroupIndex != 1"
  },

  // navigate editor tabs
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.nextEditor",
    "when": "(isWindows || isLinux) && editorTextFocus && !panelFocus && !sideBarFocus"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.previousEditor",
    "when": "(isWindows || isLinux) && editorTextFocus && !panelFocus && !sideBarFocus"
  },
  {
    "key": "cmd+shift+l",
    "command": "workbench.action.nextEditor",
    "when": "isMac && editorTextFocus && !panelFocus && !sideBarFocus"
  },
  {
    "key": "cmd+shift+h",
    "command": "workbench.action.previousEditor",
    "when": "isMac && editorTextFocus && !panelFocu && !sideBarFocuss"
  },

  // move editors around
  // moving between groups
  {
    "key": "ctrl+shift+alt+l",
    "command": "workbench.action.moveEditorToNextGroup",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+alt+l",
    "command": "workbench.action.moveEditorToNextGroup",
    "when": "isLinux"
  },
  {
    "key": "ctrl+shift+alt+h",
    "command": "workbench.action.moveEditorToPreviousGroup",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+alt+h",
    "command": "workbench.action.moveEditorToPreviousGroup",
    "when": "isLinux"
  },
  // moving within group
  {
    "key": "ctrl+shift+alt+j",
    "command": "workbench.action.moveEditorRightInGroup",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+alt+j",
    "command": "workbench.action.moveEditorRightInGroup",
    "when": "isLinux"
  },
  {
    "key": "ctrl+shift+alt+k",
    "command": "workbench.action.moveEditorLeftInGroup",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+alt+k",
    "command": "workbench.action.moveEditorLeftInGroup",
    "when": "isLinux"
  },

  // sidebar navigation
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "isWindows || isLinux"
  },
  {
    "key": "cmd+b",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.toggleAuxiliaryBar",
    "when": "isWindows || isLinux"
  },
  {
    "key": "cmd+shift+b",
    "command": "workbench.action.toggleAuxiliaryBar",
    "when": "isMac"
  },
  {
    "key": "cmd+shift+9",
    "command": "workbench.action.focusSideBar",
    "when": "isMac"
  },
  {
    "key": "shift+down",
    "command": "workbench.action.nextSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "shift+up",
    "command": "workbench.action.previousSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+shift+f",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.closeAuxiliaryBar"
      ]
    },
    "when": "(sideBarFocus || auxiliaryBarFocus) && (activeAuxiliary == 'workbench.view.search' || activeViewlet == 'workbench.view.search') && inputFocus"
  },
  {
    "key": "escape",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.focusActiveEditorGroup",
        "workbench.action.closeAuxiliaryBar"
      ]
    },
    "when": "(sideBarFocus || auxiliaryBarFocus) && (activeAuxiliary == 'workbench.view.search' || activeViewlet == 'workbench.view.search') && inputFocus"
  },

  // file/folder explorer
  // create
  {
    "key": "shift+,",
    "command": "explorer.newFolder",
    "when": "sideBarFocus && explorerViewletFocus && !inputFocus"
  },
  {
    "key": ", ,",
    "command": "explorer.newFile",
    "when": "sideBarFocus && explorerViewletFocus && !inputFocus",
  },
  // delete
  {
    "key": "d shift+d",
    "command": "deleteFile",
    "when": "sideBarFocus && explorerViewletFocus && !inputFocus"
  },
  // rename
  {
    "key": "cmd+enter",
    "command": "renameFile",
    "when": "isMac && sideBarFocus && explorerViewletFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "renameFile",
    "when": "(isWindows || isLinux) && sideBarFocus && explorerViewletFocus"
  },
  {
    "key": "g r",
    "command": "renameFile",
    "when": "sideBarFocus && explorerViewletFocus && !inputFocus"
  },
  // cut, copy, paste
  {
    "key": "d d",
    "command": "filesExplorer.cut",
    "when": "sideBarFocus && explorerViewletFocus && !inputFocus"
  },
  {
    "key": "y y",
    "command": "filesExplorer.copy",
    "when": "sideBarFocus && explorerViewletFocus && !inputFocus"
  },
  {
    "key": "p p",
    "command": "filesExplorer.paste",
    "when": "sideBarFocus && explorerViewletFocus && !inputFocus"
  },
  {
    "key": "o",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "sideBarFocus && explorerViewletFocus && !inputFocus"
  },

  // panel (bottom part) navigation
  {
    "key": "cmd+j",
    "command": "workbench.action.togglePanel",
    "when": "isMac"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.togglePanel",
    "when": "isWindows || isLinux"
  },
  {
    "key": "shift+right",
    "command": "workbench.action.nextPanelView",
    "when": "panelFocus"
  },
  {
    "key": "shift+left",
    "command": "workbench.action.previousPanelView",
    "when": "panelFocus"
  },
  {
    "key": "cmd+=",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "isMac"
  },
  {
    "key": "ctrl+=",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "isWindows || isLinux"
  },
  {
    "key": "cmd+-",
    "command": "workbench.action.output.toggleOutput",
    "when": "isMac"
  },
  {
    "key": "ctrl+-",
    "command": "workbench.action.output.toggleOutput",
    "when": "isWindows || isLinux"
  },


  // allowing easier command access for common vim command actions
  // (also helps match my linux keybindings / muscle memory)
  {
    "key": "cmd+e",
    "command": "extension.vim_ctrl+e",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+y",
    "command": "extension.vim_ctrl+y",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+u",
    "command": "extension.vim_ctrl+u",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+d",
    "command": "extension.vim_ctrl+d",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+r",
    "command": "extension.vim_ctrl+r",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },

  // move lines up/down with shift+up/down
  {
    "key": "shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },

  // terminal
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.new",
    "when": "(isWindows || isLinux) && terminalFocus"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.terminal.sendSequence",
    "args": {"text": "cd '${workspaceFolder}' && clear\u000D"}
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "(isWindows || isLinux) && terminalFocus"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "(isWindows || isLinux) && terminalFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.terminal.focusNext",
    "when": "(isWindows || isLinux) && terminalFocus"
  }
]
