[
  // removing default keybinds
  //prettier-ignore
  { "key": "ctrl+l", "command": "-expandLineSelection" },
  { "key": "ctrl+h", "command": "-editor.action.startFindReplaceAction" },
  { "key": "alt+h", "command": "-gitlens.showQuickFileHistory" },
  { "key": "shift+alt+h", "command": "-editor.showCallHierarchy" },
  { "key": "shift+alt+h", "command": "-editor.showIncomingCalls" },
  { "key": "shift+alt+h", "command": "-editor.showOutgoingCalls" },
  { "key": "shift+alt+h", "command": "-references-view.showCallHierarchy" },
  { "key": "shift+alt+h", "command": "-gitlens.showQuickRepoHistory" },
  { "key": "shift+cmd+h", "command": "-workbench.action.replaceInFiles" },
  { "key": "shift+cmd+j", "command": "-workbench.action.search.toggleQueryDetails" },
  { "key": "shift+cmd+k", "command": "-editor.action.deleteLines" },
  { "key": "shift+cmd+l", "command": "-editor.action.selectHighlights" },
  { "key": "shift+cmd+l", "command": "-addCursorsAtSearchResults" },
  { "key": "shift+cmd+l", "command": "-selectAllSearchEditorMatches" },
  { "key": "ctrl+9", "command": "-workbench.action.openEditorAtIndex9" },
  { "key": "cmd+9", "command": "-workbench.action.lastEditorInGroup" },
  { "key": "ctrl+0", "command": "-workbench.action.lastEditorInGroup" },
  { "key": "cmd+0", "command": "-workbench.action.focusSideBar" },
  { "key": "ctrl+`", "command": "-workbench.action.terminal.toggleTerminal" },
  { "key": "cmd+-", "command": "-workbench.action.zoomOut" },
  { "key": "cmd+=", "command": "-workbench.action.zoomIn" },
  { "key": "shift+cmd+u", "command": "-workbench.action.output.toggleOutput" },
  { "key": "cmd+8", "command": "-workbench.action.focusEighthEditorGroup" },
  { "key": "cmd+7", "command": "-workbench.action.focusSeventhEditorGroup" },
  { "key": "shift+cmd+e", "command": "-workbench.view.explorer" },
  { "key": "ctrl+shift+g", "command": "-workbench.view.scm" },
  { "key": "ctrl+alt+n", "command": "-code-runner.run" },
  { "key": "ctrl+t", "command": "-workbench.action.showAllSymbols" },
  { "key": "ctrl+t", "command": "-extension.vim_ctrl+t" },

  // misc shortcuts for workflow
  {
    "key": "cmd+shift+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isLinux || isWindows"
  },
  {
    "key": "ctrl+shift+right",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isLinux || isWindows"
  },
  {
    "key": "ctrl+shift+up",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "isLinux || isWindows"
  },
  {
    "key": "cmd+shift+down",
    "command": "workbench.action.focusPanel",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.focusPanel",
    "when": "isLinux || isWindows"
  },
  {
    "key": "alt+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+t",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+n",
    "command": "code-runner.run",
    "when": "isMac"
  },
  {
    "key": "meta+shift+n",
    "command": "code-runner.run",
    "when": "isLinux || isWindows"
  },
  {
    "key": "ctrl+alt+o",
    "command": "multiCommand.clearTerminal",
    "when": "isMac"
  },
  {
    "key": "meta+shift+o",
    "command": "multiCommand.clearTerminal",
    "when": "isLinux || isWindows"
  },
  {
    "key": "ctrl+alt+shift+o",
    "command": "workbench.output.action.clearOutput",
    "when": "isMac"
  },
  {
    "key": "meta+alt+shift+o",
    "command": "workbench.output.action.clearOutput",
    "when": "isLinux || isWindows"
  },
  {
    "key": "shift+cmd+g",
    "command": "git.sync",
    "when": "isMac"
  },
  {
    "key": "shift+ctrl+g",
    "command": "git.sync",
    "when": "isLinux || isWindows"
  },
  {
    "key": "ctrl+k ctrl+a",
    "command": "editor.action.selectAll",
    "when": "isLinux || isWindows"
  },

  // MacOS to Linux experience parity
  {
    "key": "ctrl+n",
    "command": "workbench.action.files.newUntitledFile",
    "when": "isLinux || isWindows",
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.files.openFile",
    "when": "isLinux || isWindows"
  },
  {
    "key": "ctrl+f",
    "command": "actions.find",
    "when": "isLinux || isWindows"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "isLinux || isWindows"
  },

  // tab and editor group navigation vim-style
  // navigate editor groups
  {
    "key": "cmd+l",
    "command": "workbench.action.focusNextGroup",
    "when": "isMac && vim.active"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusNextGroup",
    "when": "isLinux || isWindows && vim.active"
  },
  {
    "key": "cmd+h",
    "command": "workbench.action.focusPreviousGroup",
    "when": "isMac && vim.active"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusPreviousGroup",
    "when": "isLinux || isWindows && vim.active"
  },
  // navigate editor tabs
  {
    "key": "shift+cmd+l",
    "command": "workbench.action.nextEditor",
    "when": "isMac && editorTextFocus && vim.active"
  },
  {
    "key": "shift+ctrl+l",
    "command": "workbench.action.nextEditor",
    "when": "isLinux || isWindows && editorTextFocus && vim.active"
  },
  {
    "key": "shift+cmd+h",
    "command": "workbench.action.previousEditor",
    "when": "isMac && editorTextFocus && vim.active"
  },
  {
    "key": "shift+ctrl+h",
    "command": "workbench.action.previousEditor",
    "when": "isLinux || isWindows && editorTextFocus && vim.active"
  },
  // move editors around
  // moving between groups
  {
    "key": "ctrl+shift+alt+l",
    "command": "workbench.action.moveEditorToNextGroup",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+alt+l",
    "command": "workbench.action.moveEditorToNextGroup",
    "when": "isLinux"
  },
  {
    "key": "ctrl+shift+alt+h",
    "command": "workbench.action.moveEditorToPreviousGroup",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+alt+h",
    "command": "workbench.action.moveEditorToPreviousGroup",
    "when": "isLinux"
  },
  // moving within group
  {
    "key": "ctrl+shift+alt+j",
    "command": "workbench.action.moveEditorRightInGroup",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+alt+j",
    "command": "workbench.action.moveEditorRightInGroup",
    "when": "isLinux"
  },
  {
    "key": "ctrl+shift+alt+k",
    "command": "workbench.action.moveEditorLeftInGroup",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+alt+k",
    "command": "workbench.action.moveEditorLeftInGroup",
    "when": "isLinux"
  },

  // sidebar navigation
  {
    "key": "cmd+b",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "isMac"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "isLinux || isWindows"
  },
  {
    "key": "ctrl+cmd+shift+alt+b",
    "command": "multiCommand.openFocusSidebar",
    "when": "isMac && editorTextFocus"
  },
  {
    "key": "ctrl+meta+shift+alt+b",
    "command": "multiCommand.openFocusSidebar",
    "when": "isLinux && editorTextFocus"
  },
  {
    "key": "ctrl+cmd+shift+alt+b",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "isMac && sideBarFocus"
  },
  {
    "key": "ctrl+meta+shift+alt+b",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "isLinux && sideBarFocus"
  },
  {
    "key": "cmd+shift+9",
    "command": "workbench.action.focusSideBar",
    "when": "isMac"
  },
  {
    "key": "shift+down",
    "command": "workbench.action.nextSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "shift+up",
    "command": "workbench.action.previousSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "cmd+shift+8",
    "command": "workbench.view.scm",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+8",
    "command": "workbench.view.scm",
    "when": "isLinux"
  },
  {
    "key": "cmd+shift+7",
    "command": "workbench.view.explorer",
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+7",
    "command": "workbench.view.explorer",
    "when": "isLinux"
  },
  {
    "key": "shift+enter",
    "command": "explorer.newFolder",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.explorer'"
  },
  {
    "key": "cmd+enter",
    "command": "explorer.newFile",
    "when": "isMac && sideBarFocus && activeViewlet == 'workbench.view.explorer'"
  },
  {
    "key": "ctrl+enter",
    "command": "explorer.newFile",
    "when": "isLinux && sideBarFocus && activeViewlet == 'workbench.view.explorer'"
  },

  // panel (bottom part) navigation
  {
    "key": "cmd+j",
    "command": "workbench.action.togglePanel",
    "when": "isMac"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.togglePanel",
    "when": "isLinux || isWindows"
  },
  {
    "key": "shift+right",
    "command": "workbench.action.nextPanelView",
    "when": "panelFocus"
  },
  {
    "key": "shift+left",
    "command": "workbench.action.previousPanelView",
    "when": "panelFocus"
  },
  {
    "key": "cmd+=",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "isMac"
  },
  {
    "key": "ctrl+=",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "isLinux || isWindows"
  },
  {
    "key": "cmd+-",
    "command": "workbench.action.output.toggleOutput",
    "when": "isMac"
  },
  {
    "key": "ctrl+-",
    "command": "workbench.action.output.toggleOutput",
    "when": "isLinux || isWindows"
  },


  // allowing easier command access for common vim command actions
  // (also helps match my linux keybindings / muscle memory)
  {
    "key": "cmd+e",
    "command": "extension.vim_ctrl+e",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+y",
    "command": "extension.vim_ctrl+y",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+u",
    "command": "extension.vim_ctrl+u",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+d",
    "command": "extension.vim_ctrl+d",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+r",
    "command": "extension.vim_ctrl+r",
    "when": "isMac && editorTextFocus && vim.active && vim.mode != 'Insert'"
  },

  // vim-style vertical navigation in suggestion/prompt popups
  // intellisense suggestions
  {
    "key": "alt+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },

  // move lines up/down with shift+up/down
  {
    "key": "shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },

  // terminal
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.new",
    "when": "isWindows && terminalFocus"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.terminal.sendSequence",
    "args": {"text": "cd '${workspaceFolder}' && clear\u000D"}
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "isWindows && terminalFocus"
  },
  {
    "key": "ctrl+shift+h",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "isWindows && terminalFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.terminal.focusNext",
    "when": "isWindows && terminalFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.focus",
    "when": "isWindows && terminalIsOpen"
  }
]
