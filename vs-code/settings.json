{
  // ==================================
  // == VSCode General
  // ==================================
  // Telemetry
  "telemetry.telemetryLevel": "off",
  "workbench.enableExperiments": false,
  // Blank / New Editor
  "workbench.startupEditor": "newUntitledFile",
  "workbench.tips.enabled": false,
  // ==================================
  // == Editor Settings
  // ==================================
  // Text
  "editor.tabSize": 2,
  "editor.fontLigatures": true,
  // Behaviour
  "editor.wordWrap": "on",
  "explorer.confirmDragAndDrop": false,
  "git.confirmSync": false,
  "editor.matchBrackets": false,
  "editor.copyWithSyntaxHighlighting": false,
  // @sync os=linux
  // "keyboard.dispatch": "keyCode",
  // for linux custom keybindings
  "editor.insertSpaces": true,
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  // Selection
  "editor.roundedSelection": false,
  "editor.selectionHighlight": false,
  "editor.occurrencesHighlight": false,
  // View
  "editor.lineNumbers": "relative",
  "workbench.editor.wrapTabs": true,
  "workbench.editor.pinnedTabSizing": "compact",
  "workbench.editor.tabSizing": "shrink",
  "workbench.activityBar.visible": true,
  "editor.links": false,
  "explorer.compactFolders": false,
  // Cursor
  "editor.cursorStyle": "line",
  "editor.cursorBlinking": "solid",
  // Menu Bar
  // @sync os=windows
  "window.menuBarVisibility": "toggle",
  // @sync os=mac
  // "window.titleBarStyle": "custom",
  // @sync os=windows
  "window.titleBarStyle": "custom",
  // @sync os=linux
  // "window.titleBarStyle": "native",
  "window.customMenuBarAltFocus": false,
  "window.enableMenuBarMnemonics": false,
  // Breadcrumbs
  "breadcrumbs.enabled": true,
  "breadcrumbs.icons": false,
  "breadcrumbs.symbolPath": "off",
  // Minimap
  "editor.minimap.maxColumn": 95,
  "editor.minimap.showSlider": "always",
  // Integrated Terminal Behaviour
  "terminal.integrated.localEchoLatencyThreshold": 100,
  "terminal.integrated.localEchoStyle": "dim",
  "terminal.integrated.drawBoldTextInBrightColors": true,
  "terminal.integrated.fontWeightBold": "normal",
  "terminal.integrated.gpuAcceleration": "on",
  // INTELLISENSE & SUGGESTIONS
  // Toggles
  "editor.codeLens": false,
  "editor.quickSuggestions": {
    "comments": "off",
    "strings": "off",
    "other": "off"
  },
  "editor.parameterHints.enabled": false,
  "editor.lightbulb.enabled": false,
  "csharp.referencesCodeLens.enabled": false,
  // Settings
  "editor.tabCompletion": "onlySnippets",
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.quickSuggestionsDelay": 0,
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.suggestOnTriggerCharacters": false,
  "editor.suggest.localityBonus": true,
  // Suggestions
  "editor.suggest.showReferences": false,
  "editor.suggest.showSnippets": false,
  "editor.suggest.showInterfaces": false,
  "editor.suggest.showModules": false,
  "editor.suggest.showClasses": false,
  // File Exclusions
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/node_modules": true
  },
  // ==================================
  // == Font Settings
  // ==================================
  // EDITOR
  // @sync os=linux
  // "editor.inlineHints.fontFamily": "'JetBrains Mono Medium', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=mac
  // "editor.inlineHints.fontFamily": "'JetBrains Mono', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=windows
  "editor.inlineHints.fontFamily": "'JetBrains Mono', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=linux
  // "editor.fontFamily": "'JetBrains Mono Medium', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=mac
  // "editor.fontFamily": "'JetBrains Mono', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=windows
  "editor.fontFamily": "'JetBrains Mono', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=mac
  // "editor.fontSize": 15,
  // @sync os=linux
  // "editor.fontSize": 15,
  // @sync os=windows
  "editor.fontSize": 16,
  // @sync os=mac
  // "editor.lineHeight": 24,
  // @sync os=linux
  // "editor.lineHeight": 25,
  // @sync os=windows
  "editor.lineHeight": 24,
  // DEBUG CONSOLE
  // @sync os=linux
  // "debug.console.fontFamily": "'JetBrains Mono Medium', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=mac
  // "debug.console.fontFamily": "'JetBrains Mono', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=windows
  "debug.console.fontFamily": "'JetBrains Mono', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=mac
  // "debug.console.fontSize": 15,
  // @sync os=linux
  // "debug.console.fontSize": 15,
  // @sync os=windows
  "debug.console.fontSize": 16,
  // @sync os=mac
  // "debug.console.lineHeight": 24,
  // @sync os=linux
  // "debug.console.lineHeight": 24,
  // @sync os=windows
  "debug.console.lineHeight": 24,
  // TERMINAL
  // @sync os=linux
  // "terminal.integrated.fontFamily": "'JetBrainsMono Nerd Font Mono','JetBrains Mono Medium', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=mac
  // "terminal.integrated.fontFamily": "'JetBrainsMono Nerd Font Mono','JetBrains Mono', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=windows
  "terminal.integrated.fontFamily": "'JetBrainsMono Nerd Font Mono','JetBrains Mono', 'Fira Code', Monaco, Menlo, 'Courier New', monospace",
  // @sync os=mac
  // "terminal.integrated.fontSize": 15,
  // @sync os=linux
  // "terminal.integrated.fontSize": 16,
  // @sync os=windows
  "terminal.integrated.fontSize": 16,
  // @sync os=mac
  // "terminal.integrated.lineHeight": 1.2,
  // @sync os=linux
  // "terminal.integrated.lineHeight": 1.15,
  // @sync os=windows
  "terminal.integrated.lineHeight": 1.2,
  // ==================================
  // == Language Settings
  // ==================================
  // File Associations (VS Code)
  "files.associations": {
    "*.tsx": "typescriptreact",
    "*.jsx": "javascriptreact",
    "*.ahk": "ahk2",
    ".env": "env"
  },
  // JavaScript
  "javascript.validate.enable": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // TypeScript
  "typescript.tsserver.maxTsServerMemory": 8000,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // Python
  "python.pythonPath": "/usr/bin/python3",
  "python.linting.pylintEnabled": true,
  "python.linting.enabled": true,
  "python.showStartPage": false,
  // CSS
  "less.lint.emptyRules": "ignore",
  "scss.lint.emptyRules": "ignore",
  "css.lint.emptyRules": "ignore",
  // JSON
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  // HTML
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // AutoHotkey2
  "[ahk2]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
  },
  // ==================================
  // == Extension Settings
  // ==================================
  // Emmet
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": true,
  // Highlight Matching Tag
  "highlight-matching-tag.highlightSelfClosing": true,
  "highlight-matching-tag.styles": {
    "opening": {
      "name": {
        "underline": "#D4D4D4"
      }
    }
  },
  // Subtle Match Brackets / Colorization
  "subtleBrackets.parse": false,
  // Settings Sync (extension)
  "sync.autoDownload": true,
  "sync.autoUpload": true,
  "sync.gist": "934bb776e4b628cff2f99ce8ba9352b9",
  "sync.quietSync": true,
  // GitLens
  "gitlens.codeLens.enabled": false,
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.enabled": false,
  "gitlens.hovers.currentLine.over": "annotation",
  "gitlens.statusBar.reduceFlicker": true,
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": false,
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "authors": true
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  },
  "gitlens.views.branches.files.layout": "list",
  "gitlens.views.branches.branches.layout": "list",
  "gitlens.views.branches.showBranchComparison": false,
  "gitlens.views.showRelativeDateMarkers": false,
  "gitlens.views.searchAndCompare.files.layout": "list",
  "gitlens.views.commits.showBranchComparison": false,
  "gitlens.views.commits.files.layout": "list",
  // Code Runner
  "code-runner.enableAppInsights": false,
  "code-runner.runInTerminal": true,
  "code-runner.showRunIconInEditorTitleMenu": false,
  "code-runner.preserveFocus": true,
  "code-runner.clearPreviousOutput": false,
  // Markdown Preview
  "markdown-preview-enhanced.scrollSync": true,
  "markdown-preview-enhanced.previewTheme": "atom-material.css",
  // NPM Intellisense
  "npm-intellisense.importQuotes": "\"",
  // Multi Command (custom commands)
  "multiCommand.commands": [
    {
      "command": "multiCommand.clearTerminal",
      "sequence": [
        "workbench.action.terminal.clear",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    {
      "command": "multiCommand.openFocusSidebar",
      "sequence": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusSideBar"
      ]
    },
    {
      "command": "multiCommand.cycleProjectChecking",
      "sequence": [
        "settings.cycle.projectCheckingStatus",
        "settings.cycle.projectChecking"
      ]
    }
  ],
  // Settings Cycler (shortcuts to cycle/toggle settings)
  // use in keybindings.json as command: `settings.cycle.<id>`
  "settings.cycle": [
    {
      "id": "projectChecking",
      "overrideWorkspaceSettings": true,
      "values": [
        {
          "typescript.tsserver.experimental.enableProjectDiagnostics": false
        },
        {
          "typescript.tsserver.experimental.enableProjectDiagnostics": true
        }
      ]
    },
    {
      "id": "projectCheckingStatus",
      "overrideWorkspaceSettings": true,
      "values": [
        {
          "statusbar_command.commands": [
            {
              "text": "$(check)",
              "tooltip": "TS: Checking only open files",
              "alignment": "left",
              "command": "multiCommand.cycleProjectChecking",
              "priority": 100
            }
          ]
        },
        {
          "statusbar_command.commands": [
            {
              "text": "$(check-all)",
              "tooltip": "TS: Checking all files",
              "alignment": "left",
              "command": "multiCommand.cycleProjectChecking",
              "priority": 100
            }
          ]
        }
      ]
    }
  ],
  // Todo Tree
  "todo-tree.tree.showScanModeButton": false,
  "todo-tree.general.tags": [
    "TODO",
    "UPDATE",
    "FIXME",
    "TEMP"
  ],
  "todo-tree.highlights.defaultHighlight": {
    "icon": "issue-opened",
    "type": "whole-line",
    "foreground": "#767080",
    "background": "#e08da5",
    "opacity": 10,
    "iconColour": "#e08da5"
  },
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "icon": "dot-fill",
      "gutterIcon": true,
      "type": "whole-line",
      "foreground": "#767080",
      "background": "#4AB4C4",
      "opacity": 6,
      "iconColour": "#4AB4C4"
    },
    "UPDATE": {
      "icon": "dot-fill",
      "gutterIcon": true,
      "type": "whole-line",
      "foreground": "#767080",
      "background": "#E566BA",
      "opacity": 10,
      "iconColour": "#E566BA"
    },
    "FIXME": {
      "icon": "alert",
      "gutterIcon": true,
      "type": "whole-line",
      "foreground": "#767080",
      "background": "#e65a6e",
      "opacity": 10,
      "iconColour": "#e65a6e"
    },
    "TEMP": {
      "icon": "dot-fill",
      "gutterIcon": true,
      "type": "tag-and-comment",
      "foreground": "#767080",
      "background": "#FADB82",
      "opacity": 8,
      "iconColour": "#FADB82"
    }
  },
  // statusbar-commands
  "statusbar_command.commands": [
    {
      "text": "$(check)",
      "tooltip": "TS: Checking only open files",
      "alignment": "left",
      "command": "multiCommand.cycleProjectChecking",
      "priority": 100
    }
  ],
  // ESLint
  "eslint.packageManager": "yarn",
  "eslint.runtime": "node",
  "eslint.options": {},
  // ==================================
  // == Theme / Colour Settings
  // ==================================
  "workbench.colorTheme": "LaserWave Italic",
  // Workbench Colours
  "workbench.colorCustomizations": {
    "[DuoTone Dark Sky]": {
      "statusBar.background": "#2D2D2D",
      "statusBar.noFolderBackground": "#2D2D2D",
      "statusBar.debuggingBackground": "#4b3d92",
      "editorIndentGuide.activeBackground": "#3a3a3a",
      "editorIndentGuide.background": "#2e2e2e",
      "editorLineNumber.foreground": "#4d4a5f",
      "editor.lineHighlightBackground": "#332e3d73",
      "scrollbarSlider.background": "#ffffff0c",
      "scrollbarSlider.hoverBackground": "#ffffff13",
      "scrollbarSlider.activeBackground": "#ffffff18",
      "editor.foldBackground": "#302b3a80",
      "activityBarBadge.background": "#544580",
      "activityBarBadge.foreground": "#e0e0e0"
    },
    "[Ariake Dark]": {
      "editor.background": "#272a36",
      "statusBar.background": "#1d1f27",
      "statusBar.noFolderBackground": "#1d1f27",
      "statusBar.foreground": "#B9BED5",
      "statusBar.noFolderForeground": "#B9BED5",
      "editorIndentGuide.activeBackground": "#353a49",
      "editorIndentGuide.background": "#2b303d",
      "editorLineNumber.foreground": "#3c4153",
      "editor.lineHighlightBackground": "#373c502c",
      "scrollbarSlider.background": "#cecece0c",
      "scrollbarSlider.hoverBackground": "#ffffff13",
      "scrollbarSlider.activeBackground": "#ffffff18",
      "editor.foldBackground": "#2e313d4d",
      "activityBarBadge.background": "#3f4663",
      "activityBarBadge.foreground": "#e0e0e0"
    },
    "[LaserWave Italic]": {
      /* TODO:
        - make highlight color inside sidebar visible
        - remove pink focus border from sidebar
        - tweaks to pink selections in general
        - make UI dropdown backgrounds fit with theme
      */
      // Bracket pair colorizer
      "editorBracketHighlight.foreground1": "#eed568b3",
      "editorBracketHighlight.foreground2": "#e269b6b3",
      "editorBracketHighlight.foreground3": "#52b0bcb3",
      // "editorBracketHighlight.foreground4": "#74D198b3",
      // "editorBracketHighlight.foreground5": "#9866C0b3",
      // "editorBracketHighlight.foreground6": "#CAC3C9b3",
      //"editorBracketHighlight.foreground1": "#5caeef", // default
      //"editorBracketHighlight.foreground2": "#dfb976", // default
      //"editorBracketHighlight.foreground3": "#c172d9", // default
      //"editorBracketHighlight.foreground4": "#4fb1bc", // default
      //"editorBracketHighlight.foreground5": "#97c26c", // default
      //"editorBracketHighlight.foreground6": "#abb2c0", // default
      //"editorBracketHighlight.unexpectedBracket.foreground": "#db6165",
      // Default (unthemed) text color
      "editor.foreground": "#eeeeee",
      // Line number duller
      "editorLineNumber.foreground": "#494352",
      // EDITOR INTERFACE
      "editorGroup.border": "#1e1924",
      // Title bar
      "titleBar.activeBackground": "#1e1924",
      "titleBar.inactiveBackground": "#1e1924",
      "titleBar.activeForeground": "#c6c3c9",
      "titleBar.inactiveForeground": "#a9a6ac",
      // Tabs bar
      "editorGroupHeader.tabsBackground": "#1e1924",
      "editorGroupHeader.noTabsBackground": "#1e1924",
      "tab.inactiveBackground": "#1e1924",
      "tab.activeBorder": "#27212E",
      "tab.border": "#1e1924",
      // Breadcrumbs
      "breadcrumb.foreground": "#88858a",
      // Side bar
      "sideBar.background": "#1e1924",
      "sideBar.border": "#1e1924",
      "activityBar.background": "#1e1924",
      "activityBarBadge.background": "#50345c",
      "activityBarBadge.foreground": "#e0e0e0",
      // Status bar
      "statusBar.foreground": "#c6c3c9",
      "statusBar.background": "#1e1924",
      "statusBar.noFolderBackground": "#1e1924",
      "statusBar.debuggingBackground": "#3a1e55",
      // Git diff colors
      "editorGutter.addedBackground": "#30343d",
      "editorGutter.modifiedBackground": "#362a47",
      "editorGutter.deletedBackground": "#572d2d",
      "minimapGutter.addedBackground": "#315348",
      "minimapGutter.modifiedBackground": "#56397e",
      "minimapGutter.deletedBackground": "#7a3131",
      // WIDGETS
      // All widgets
      "editorWidget.background": "#211C29",
      // Suggestion popup
      "editorSuggestWidget.background": "#211C29",
      "editorSuggestWidget.border": "#716385",
      "editorSuggestWidget.selectedBackground": "#58445fd5",
      "editorSuggestWidget.foreground": "#eeeeee",
      "editorSuggestWidget.highlightForeground": "#b381c5",
      // Peek view
      "peekView.border": "#b381c5",
      "peekViewEditor.background": "#26212E",
      "peekViewResult.background": "#211C29",
      "peekViewTitle.background": "#211C29",
      "peekViewResult.matchHighlightBackground": "#48afbf67",
      "peekViewResult.selectionBackground": "#eb64ba56",
      // Minimap
      "minimap.selectionHighlight": "#694780bb",
      "minimap.findMatchHighlight": "#418ca5",
      "minimap.errorHighlight": "#833535",
      "minimapSlider.background": "#69616b1a",
      "minimapSlider.hoverBackground": "#69616b1a",
      "minimapSlider.activeBackground": "#73548036",
      // Scrollbar
      "scrollbarSlider.background": "#6c676d1a",
      "scrollbarSlider.hoverBackground": "#6c656d27",
      "scrollbarSlider.activeBackground": "#73548036",
      "scrollbar.shadow": "#000000a6",
      // Line indentation guides
      "editorIndentGuide.activeBackground": "#796b883f",
      "editorIndentGuide.background": "#74628a17",
      // Active line
      "editor.lineHighlightBorder": "#2c2436",
      "editor.lineHighlightBackground": "#292231",
      // Folded line
      "editor.foldBackground": "#2d2536d5",
      // Selection
      "editor.selectionBackground": "#40344ede",
      // Search
      "editor.findRangeHighlightBackground": "#2b2233",
      "editor.findRangeHighlightBorder": "#40344e",
      "editor.rangeHighlightBackground": "#40344ede",
      // Integrated terminal
      "terminal.background": "#27212E",
      "terminal.foreground": "#F8F8F2",
      "terminal.ansiBlack": "#21222C",
      "terminal.ansiBrightBlack": "#6272A4",
      "terminal.ansiRed": "#FF5555",
      "terminal.ansiBrightRed": "#FF6E6E",
      "terminal.ansiGreen": "#50FA7B",
      "terminal.ansiBrightGreen": "#69FF94",
      "terminal.ansiYellow": "#F1FA8C",
      "terminal.ansiBrightYellow": "#FFFFA5",
      "terminal.ansiBlue": "#BD93F9",
      "terminal.ansiBrightBlue": "#D6ACFF",
      "terminal.ansiMagenta": "#FF79C6",
      "terminal.ansiBrightMagenta": "#FF92DF",
      "terminal.ansiCyan": "#8BE9FD",
      "terminal.ansiBrightCyan": "#A4FFFF",
      "terminal.ansiWhite": "#F8F8F2",
      "terminal.ansiBrightWhite": "#FFFFFF"
    }
  },
  // Theme Colours / Syntax Highlighting
  "editor.tokenColorCustomizations": {
    "[Ariake Dark]": {
      /* == COLOR REFERENCE ==
        Default Theme Colors:
          Pink: #DDA2F6
          Purple: #A571F4
          MODIFIED Purple: #b27eff
          Subdued Purple: #7E7EDD
          MODIFIED Subdued Purple: #8686ec
          Aqua: #9AEFEA
          Aqua MODIFIED: #9AEFEA
          Light Blue: #93DDFB
          Middle Blue: #85B1E0
          White: #F5FAFF
          Grey: #B9BED5
          Dark Grey: #555C77

        Custom Colors:
          Subdued Pink: #956fa5
          Less White: #ecf1f5
          Bright Purple: #b27eff
          Clean Purple: #8f8fe0
          Less Light Blue: #8bc9e2
          More Middle Blue: #7bbeeb
      */
      "textMateRules": [
        // Theme: Pink
        {
          "scope": [
            //""
          ],
          "settings": {
            "foreground": "#DDA2F6"
          }
        },
        // Theme MODIFIED: Purple
        {
          "scope": [
            // default selectors:
            "support.class"
          ],
          "settings": {
            "foreground": "#b27eff"
          }
        },
        // Theme MODIFIED: Subdued Purple
        {
          "scope": [
            // default selectors:
            "keyword.control",
            "storage",
            "meta.selector",
            // custom selectors:
            "keyword.operator.assignment",
            "keyword.operator.combinator"
          ],
          "settings": {
            "foreground": "#8686ec"
          }
        },
        // Theme MODIFIED: Aqua
        {
          "scope": [
            // default selectors:
            "string"
          ],
          "settings": {
            "foreground": "#97e5e7"
          }
        },
        // Theme: Light Blue
        {
          "scope": [
            //""
          ],
          "settings": {
            "foreground": "#93DDFB"
          }
        },
        // Theme: Middle Blue
        {
          "scope": [
            "support.type.property-name.json"
          ],
          "settings": {
            "foreground": "#85B1E0"
          }
        },
        // Theme: White
        {
          "scope": [
            //""
          ],
          "settings": {
            "foreground": "#F5FAFF"
          }
        },
        // Theme: Grey
        {
          "scope": [
            "keyword.operator.increment",
            "keyword.operator.relational"
          ],
          "settings": {
            "foreground": "#B9BED5"
          }
        },
        // Theme: Dark Grey
        {
          "scope": [
            "punctuation.terminator",
            "meta.brace",
            "punctuation.definition",
            "punctuation.separator",
            "punctuation.section.embedded",
            "punctuation.support.type.property-name.begin",
            "punctuation.support.type.property-name.end",
            "punctuation.accessor",
            "punctuation.section.property-list.begin",
            "punctuation.section.property-list.end",
            "punctuation.section.function"
          ],
          "settings": {
            "foreground": "#5e647e"
          }
        },
        // Custom: Less White
        {
          "scope": [
            "meta.property-value.css"
          ],
          "settings": {
            "foreground": "#ecf1f5"
          }
        },
        // Custom: Bright Purple
        {
          "scope": [
            //""
          ],
          "settings": {
            "foreground": "#b27eff"
          }
        },
        // Custom: Clean Purple
        {
          "scope": [
            "support.type.property-name.css",
            "storage.type.function.arrow"
          ],
          "settings": {
            "foreground": "#9292da"
          }
        },
        // Custom: Less Light Blue
        {
          "scope": [
            "constant.other.color.rgb-value.hex.css"
          ],
          "settings": {
            "foreground": "#8bc9e2"
          }
        },
        // Custom: More Middle Blue
        {
          "scope": [
            "entity.name.tag.css",
            "variable.language.this"
          ],
          "settings": {
            "foreground": "#81c5f1"
          }
        },
        // Custom: Subdued Pink
        {
          "scope": [
            "keyword.other.unit"
          ],
          "settings": {
            "foreground": "#956fa5"
          }
        },
        // Specific: Classes
        {
          "scope": [
            "entity.name.type.class"
          ],
          "settings": {
            "foreground": "#b27eff", // Custom: Bright Purple
            "fontStyle": "bold"
          }
        }
      ]
    },
    "[LaserWave Italic]": {
      /* == TODO ==
        - change color of readonly variables (under semantics) and in-built objects (also semantics)
      */
      /* == COLOR REFERENCE ==
        Default Theme Colors:

          Pink: #EB64B9
            (functions/methods, attributes, css classes/ids)

          Purple: #B381C5
            (numbers, storage type keywords)

          Green: #74DFC4
            (html tags, css tags, operators)

          Blue: #40B4C4
            (storage/modifier/control keywords, json keys, css prop names, unit types, regex flags)

          Light Blue: #B4DCE7
            (strings)

          White: #FFFFFF
            (plain text, html content, parameters, class declarations, variables)

          Grey: #91889B
            (comments)

          PurpleGrey: #716385
            (punctuation)

          Yellow: #FFE261
            (boolean, const variable declarations, console object)
      */
      "textMateRules": [
        // Typescript "this" keyword is purple
        {
          "scope": [
            "variable.language.this.tsx"
          ],
          "settings": {
            "foreground": "#B381C5"
          }
        },
        // Smoke/tinted color for unimportant things and unknown variables
        {
          "scope": [
            "meta.jsx.children",
            "text.html.derivative",
            // These will be overridden by semantic highlighting if variable exists:
            "variable.other.readwrite.js",
            "variable.other.readwrite.ts"
          ],
          "settings": {
            "foreground": "#cac5d3"
          }
        },
        // Slightly darkening comments
        {
          "scope": [
            "comment",
            "punctuation.definition.comment"
          ],
          "settings": {
            "foreground": "#827a8b"
          }
        },
        // Coloring classes
        {
          "scope": [
            "entity.name.type.class"
          ],
          "settings": {
            "foreground": "#5fcc98"
          }
        },
        // Making JSX component tags differ from normal tags
        {
          "scope": [
            "support.class.component"
          ],
          "settings": {
            "foreground": "#5fcc98",
            "fontStyle": "bold"
          }
        },
        // Making object literal keys in same blue as json keys
        // (When in quotes, as non-quoted keys already are)
        {
          "scope": [
            "meta.object-literal.key string.quoted.single",
            "meta.object-literal.key string.quoted.double",
            "meta.object-literal.key string.quoted.single.js",
            "meta.object-literal.key string.quoted.double.js"
          ],
          "settings": {
            "foreground": "#40B4C4"
          }
        },
        // - Making CSS variables white
        // - Making module namespaces white
        {
          "scope": [
            "variable.css",
            "variable.argument.css",
            "support.constant.color.w3c-standard-color-name.css",
            "constant.other.color.rgb-value.hex.css",
            "entity.name.type.module"
          ],
          "settings": {
            "foreground": "#ffffff"
          }
        },
        // Making CSS hex and W3C color names change when right
        {
          "scope": [
            "support.constant.color.w3c-standard-color-name.css",
            "constant.other.color.rgb-value.hex.css"
          ],
          "settings": {
            "foreground": "#B4DCE7"
          }
        },
        // - Making CSS variable brackets dull (like functions)
        // - Making .md fenced code blocks lang name dull
        // - SASS/SCSS dulling general
        {
          "scope": [
            "punctuation.section.function.begin.bracket.round.css",
            "punctuation.section.function.end.bracket.round.css",
            "punctuation.section.property-list.begin.bracket.curly.scss",
            "punctuation.section.property-list.end.bracket.curly.scss",
            "fenced_code.block.language.markdown",
            "punctuation.separator.list.comma.scss"
          ],
          "settings": {
            "foreground": "#716385"
          }
        },
        // Making code/pre parts of .md files a different color
        {
          "scope": [
            "markup.inline.raw.string.markdown"
          ],
          "settings": {
            "foreground": "#B4DCE7"
          }
        },
        // Making boolean values less yellow
        {
          "scope": [
            "constant.language",
            "constant.language.boolean.true.js",
            "constant.language.boolean.false.js",
            "constant.language.boolean.true.ts",
            "constant.language.boolean.false.ts"
          ],
          "settings": {
            "foreground": "#FFE28A"
          }
        },
        // Making undefined and null values duller
        {
          "scope": [
            "constant.language.undefined.js",
            "constant.language.undefined",
            "constant.language.null.js",
            "constant.language.null"
          ],
          "settings": {
            "foreground": "#ddcc96"
          }
        },
        // Making 'new' and 'this' keyword italic
        {
          "scope": [
            "keyword.operator.new",
            "variable.language.this.tsx"
          ],
          "settings": {
            "fontStyle": "italic"
          }
        }
      ]
    }
  },
  // Further Syntax Highlighting
  "editor.semanticTokenColorCustomizations": {
    "enabled": true,
    "[LaserWave Italic]": {
      "rules": {
        "variable.defaultLibrary": "#FFE28A",
        "class.defaultLibrary": "#FFE28A",
        "class.declaration": {
          "fontStyle": "bold"
        },
        "variable.declaration.readonly": "#ffffff",
        "variable": "#ffffff",
        "variable.readonly": "#ffffff",
        "parameter": "#ffffff"
      }
    }
  },
  // ==================================
  // == VIM Settings / Plugins
  // ==================================
  // Plugin Toggles
  "vim.visualstar": true,
  "vim.camelCaseMotion.enable": true,
  "vim.easymotion": true,
  // EasyMotion
  "vim.easymotionMarkerForegroundColorOneChar": "#3de8ff",
  "vim.easymotionMarkerForegroundColorTwoCharFirst": "#df87ff",
  "vim.easymotionMarkerForegroundColorTwoCharSecond": "#A96BC0",
  "vim.easymotionIncSearchForegroundColor": "#46e398",
  // ==================================
  // == VIM Keybindings
  // ==================================
  // NORMAL MODE
  "vim.normalModeKeyBindingsNonRecursive": [
    // Jump to matching HTML tag
    {
      "before": [
        "<leader>",
        "%"
      ],
      "commands": [
        {
          "command": "editor.emmet.action.matchTag"
        }
      ]
    },
    // Select all text (in vim)
    {
      "before": [
        "<leader>",
        "a"
      ],
      "after": [
        "g",
        "g",
        "V",
        "G"
      ]
    },
    // Rename (same as F2)
    {
      "before": [
        "g",
        "r"
      ],
      "commands": [
        {
          "command": "editor.action.rename"
        }
      ]
    },
    // Capital Y yanks to end of line, instead of whole line
    {
      "before": [
        "Y"
      ],
      "after": [
        "y",
        "$"
      ]
    },
    // db and cb deleted/changes backward word including char under cursor
    {
      "before": [
        "d",
        "b"
      ],
      "after": [
        "v",
        "b",
        "d"
      ]
    },
    {
      "before": [
        "c",
        "b"
      ],
      "after": [
        "v",
        "b",
        "c"
      ]
    },
    // Toggle Boolean
    {
      "before": [
        "c",
        "i",
        "b"
      ],
      "commands": [
        {
          "command": "extension.toggleBool"
        }
      ]
    },
    // shift J and K scroll, and comma now joins lines
    {
      "before": [
        "J"
      ],
      "after": [
        "<C-e>"
      ]
    },
    {
      "before": [
        "K"
      ],
      "after": [
        "<C-y>"
      ]
    },
    {
      "before": [
        ","
      ],
      "after": [
        "J"
      ]
    },
    // up and down arrow keys navigate soft-wrapped lines
    {
      "before": [
        "up"
      ],
      "after": [
        "g",
        "k"
      ]
    },
    {
      "before": [
        "down"
      ],
      "after": [
        "g",
        "j"
      ]
    },
    // left and right arrow keys do camelcase movement
    {
      "before": [
        "left"
      ],
      "after": [
        "<leader>",
        "b"
      ]
    },
    {
      "before": [
        "right"
      ],
      "after": [
        "<leader>",
        "w"
      ]
    },
    // Save and quit with cap S and Q like in my vimrc
    {
      "before": [
        "S"
      ],
      "after": [
        ":",
        "w",
        "<cr>"
      ]
    },
    {
      "before": [
        "Q"
      ],
      "after": [
        ":",
        "q",
        "<cr>"
      ]
    },
    // EASYMOTION TWEAKS
    // Search n characters
    {
      "before": [
        "g",
        "\\"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "/"
      ]
    },
    // Search for a character
    {
      "before": [
        "g",
        "/"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "s"
      ]
    },
    // Jump to start of line
    {
      "before": [
        "g",
        "l"
      ],
      "after": [
        "<leader>",
        "<leader>",
        "<leader>",
        "b",
        "d",
        "j",
        "k"
      ]
    },
    // PEEK
    // Disabling "gp" on it's own
    {
      "before": [
        "g",
        "p"
      ],
      "after": []
    },
    // Peek definition
    {
      "before": [
        "g",
        "p",
        "d"
      ],
      "commands": [
        {
          "command": "editor.action.peekDefinition"
        }
      ]
    },
    // Peek type definition
    {
      "before": [
        "g",
        "p",
        "t"
      ],
      "commands": [
        {
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    // Peek implementations
    {
      "before": [
        "g",
        "p",
        "i"
      ],
      "commands": [
        {
          "command": "editor.action.peekImplementation"
        }
      ]
    },
    // Peek references
    {
      "before": [
        "g",
        "p",
        "r"
      ],
      "commands": [
        {
          "command": "editor.action.goToReferences"
        }
      ]
    },
    // TRIGGER SUGGESTIONS
    {
      "before": [
        "g",
        "s"
      ],
      "commands": [
        {
          "command": "editor.action.triggerSuggest"
        }
      ]
    }
  ],
  // VISUAL MODE
  "vim.visualModeKeyBindingsNonRecursive": [
    // Repeatable multiline indentation
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
    // left and right arrow keys do camelcase movement
    {
      "before": [
        "left"
      ],
      "after": [
        "<leader>",
        "b"
      ]
    },
    {
      "before": [
        "right"
      ],
      "after": [
        "<leader>",
        "w"
      ]
    },
    // Pasting in visual mode does not override current register
    {
      "before": [
        "p"
      ],
      "after": [
        "p",
        "g",
        "v",
        "y"
      ]
    }
  ],
  // ==================================
  // == Unorganised
  // ==================================
  // first item is deliberately here so others are placed after
  "editor.accessibilitySupport": "off",
  "workbench.editor.untitled.hint": "hidden",
  "typescript.tsserver.experimental.enableProjectDiagnostics": false,
  "security.workspace.trust.untrustedFiles": "open",
  "security.workspace.trust.enabled": false,
  "prettier.singleQuote": true,
  "bracket-pair-colorizer-2.depreciation-notice": false,
  "AutoHotkey2.ActionWhenV1IsDetected": "SwitchToV1",
}
